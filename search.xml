<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My first blog</title>
    <url>/2022/10/18/My-first-blog/</url>
    <content><![CDATA[<p>大家好，我是C++练习时长2年的张博煊，今天和大家分享一下我的学习心得还有记录下我的第一篇博客啦！</p>
<p>一.我与CSDN<br>我呢，作为一个初学者嘛，写代码难免会出现各种各种的错误，然后代码执行的时候就会出现各种各种的错误。但是我这个没有任何编程基础而且数学烂到渣英语也只有半桶水水平的小白白，连很多的报错提示都看不懂，然后我就把报错信息复制到百度上，就可以找到很多的解决方法。几次以后，我发现了一个挺有趣的现象，就是一般我搜索报错信息时显示在百度页面第一或者前几名的都是一些CSDN的博客文章，于是我带着好奇心，搜索CSDN，点进去以后，发现这是一个专业的IT技术社区，我浏览了一下，我发现，天啊！这到底是什么宝藏网站啊，简直就是编程小白学习的天堂啊！里面有各种大佬发的文章，各种编程语言的都有，包括前后端，还有安全攻防的等等很多很多。我点进里面的C++专区，里面有很多大牛们的分享，文章的内容深度也有浅有难，有我看不懂的代码，也有我能试着在脑海脑补执行结果的代码。我也搜索了一些我的疑惑问题，很多文章都能帮我完美解决。感觉这就像IT界的知乎呀。<br>二.互相学习，相互促进<br>以后我也会写博客分享我学习C++的经验，我先跟着老师走，然后下课后，再尝试自己把代码写出来。然后再分享到CSDN这个大家庭里，我会把写代码时遇到的一些报错情况以及后来我怎么解决的都展示出来。我相信我作为一名小白，我遇到的情况可能也是许多初学的朋友会遇到的，也希望可以给到大家一些帮助。大家如果我觉得我的代码里面有什么需要修正的地方或者疑惑也欢迎大家在评论区贴出来，我会虚心接受和解答的。因为这样，我们大家才可以进步嘛！<br>最后祝大家学习愉快啦！走啦，敲代码去吧!</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/10/18/hello-world/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="fba42219ef4b4d79da948dca0cf75d25a6021e0649b0c41327b99ac57dc81f00">e5b0db6e4d1c3bdfd860e280afca805fea9cb670a90926105aa935cc4b0c3131b03c3148fadc0ed688d677e7702092804f02830fc7601d062d7c70afb9e182cbb7af81732edf1fa898ab328e4eb1fd67f39f8c658260e1e42cb4fdb34d99a80bde6952a386fc488369cd111e3d4b30606ddfcdce42e3c1447465127d7427e43ed02e68cb36e3c2b6819099c5983a742c310273548ca35aebec6a93f0724cbebf224fffadadc938057fda3b1641a24aad58958102387445737968a408c61711958bc7890b2917556b8954b3aa1c8cf576121df0087702646ee79fb5d592491c5994d6ed4008d3bb0e42e0a8c21766c8b54e80c171bb05caf7cf2b6fd964fa3cdcb6f627b78e680fdeafb2fb2887907b22d5d0319ce14b19b434b560a2760819667f69e274675145f5b15156c573cfc0447d640d7f059985fc64298ef524ce7e474aae06c5ce40ef53f764a9bfc65278b2abab40f6dfc54c3951c18bea6b83d19e69e964e7708a043f6ab1a883b772323609a97cac5d238bac54aab95bd7f2418be833f9b00f07c1978837f9ea4749b9dcf23ddfdb54079ef6d88bb4813597061aad27f04a795c8a6a7d26a6c34966e13cfe54335a14c074d55b38525fc69b07e9fe3dd1ba9973f4671ab929b26ecdaf4f3e95e156c5a511db32d73941c2db88b504023ec0a2de87ef2f01fe1c6fea0a7d788d7b05c814ae84d0a18d72f1adfbcd4a9a848dc5b5409d086055ade725f237062cc1dcbf7775cee0e66c03f8f5b737e26fb4f3713bca3d2b7b6d05d4ceae97f9d5106b044dd2ac4e91ec122eec8dc136b4bf319bcc11e03fb4282eabc72e556b2056253b8f9ffe3407ea87aa9da2ae779bc54010a9b38228ed7554a88495cb54ecaa176373a6e9ac6b4966c9b45cbecaae09907c4bf9454b373b8a93f8c051e02660f861783dab8effa431f9b4394b4ba1da9ee368eb0e1bde3113245675fbc57adc3e026add28663b8a6b4ffdaf8b5458719e81fe4f78904f044f4fcb18f03b50ab94b5266d9439fa541bce420c86477495be8c98a6bc17bfc0fded57e5ade43e9d61c661977f4bbc6ea3897e6f852e30ff0d84ede2ee4e9e6ece176e28bf39c80683e3f16dd6a7f5df6b55aaf8ef9975024719e767bc9dd9bdcda8e43ff34e6313e4d65ca0665981b9147165ebba0d012953d5f6ebc9cb3ee45991912b71284b8be9e3db9e25ef2fd54545ca45338527cdbe80da047b670013f2ad041b17cb9a15db1d558de19a919e43ab4ab6c1def3269176464b989ff0314866ef9e171b2e858166271fb01d7a3c686bfd861bdd5c0a7c5d9354aa17ab9bd0fe73d5e4906b25e358700cb0cd898b744fd652083d3019abbc56ea52b85bd1732b2d1536d943d6365a3812b111faab0ff0b17f2b371b25aef442d85ac6e2bf9462157715b4ea9ff1c060bd6f68ab6aa4a39c7a785e8505569a4461d9e160119ef38c23c1e707f3cc72eb05520e790c753e87a221ef7aab5799879473fc73ea5c3a17312408794ca247d0fca861da5ccfa5cfaee68a5ec3dc6559a4635cc0f526d58f2ebb07252da4b8c1fd7b7901390ae43c257f56ae2912bfb60a924b8e20ea1c0e07d6a09f8c1bc387ae19a0550a65e0a3a491f91912d4bfe801aa9ec172f4f946ac330b037fa4e2f484e41064e1234a27103d0abcc1ee058eecf75e9aacd3d43adf06f6982a6bf4c4c733488000a135559d1b5b22627da21716f5fab1f413d3c7b0e6bae63b77c74ec65d1305dc4b5f089f828a9cc08e180eb1764d4a64d49f62fe49ea7764889017b326c80d6a37db58d7c04a373cba4d276d2eacc9aad628c35c37c83b5d883ea82f372ba677dc09e175c2b11c311a8a64bba7a4eadd766143372d71238bf9cd74381416274d55a05986c3a4a6e50bfc271a562b744a4e5d304e797ae611e27fecb83feec76086b3b4944bfef7a225bda2c750b7ed3779653c9cc56ac08008ee56ef8daca4df11f596c0de99a4c01414be4822c0fa18ffdd1dbdd741ce50d8556161aff5f5a60d72d8214943f1c1c58bf8b6f5fd2ddbf03647a590a374decaa13cb96d76bd546f8033aa34ea41269a81c0087fb258968d7f8dc194b208ad1deb69d43bd28932657f96b4d73aada8291ea4c28de9558d899e191632e8446972193bcafff803a4306ca363cd3ce940af4b2115261a0c76db12147defd4ea9555ce7f32db6490c90a7bb034c2b9c77a7904c98452b4bf8f3d65102ab41711aaa9e716d9e6a826e3e931bc4a622affc3298c7a559b7e03792df0054f4db44c4de87089cb7dde7171a097bde9388e0d446e7ca652d0b58d2b4f54f548f0d355121f12f0a7d2100874dec5ff0e9311df826c2899636374e0ce78c47a01f2516022666d4642bceb8dde4fb9c061bb1b3bf29133090279db782d80993657639dfaa91f5f2b9778c161ea62a7932f6d69d314de81f11c44e84eb7e8620a42db563509abb9ad65216edded15ef862ba5998fac757714bc14e236aee4ce92418902377f7f3fa6302b9931ebab883b8278858c83f25177e9ccbcb0e0b259ff8604b046775009cfa28dde527a209592f2e719235bae0ca7976d6a5362aea430f8d3c4e012b3574cab789e5f2f5a277f2bc1b5f2ae7680d98b0988847e3be8bf5c2aa5e57575f589eab6cd2d4264013d1128d8bbdda6da7836dee65bbe407f7202ce3871fdc01538feb7d7a3b4da6c86345d82c7cdac98648c6a6c14ab4c31a78514bed3006a588aff2dc46092e0bbd2a5f6e410cec46283ffd63387b378d33d928627a1c265c76f7d66c0e6325b0907583fd05a4e25f51b5e1331a498aa19dee3a34d9d267ad3a25c2ec3e92a06081adf699f5f469109401dc966a1318e66c1a4f536ed400ef88fe4b0a20c290565c276ac68d9452ba32156fc7eea506dca1bd851e463736a3fb4e27a91ede667bdaaa13f14f48f849f7fe36caa520614982aa5b9cd9fbedda6a60b9e758fb362d26c351fff09244d18706187e2e672a1cfb17411548e92fcacc1dee9637103ab405f13280b98d77a91e3ad03b08fab33eb92d9adac0b74bda3496ec72dfdfa63e49735214b8f564c3fb4cd18eec759b13847463f26a7af5cc70394ec983c251eacde02c519befe97f001f7e484774260a1973228</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>autoGen</category>
      </categories>
      <tags>
        <tag>autoGen</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷-P5722 【深基4.例11】数列求和 题解</title>
    <url>/2022/10/18/%E6%B4%9B%E8%B0%B7-P5722-%E3%80%90%E6%B7%B1%E5%9F%BA4-%E4%BE%8B11%E3%80%91%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C-%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="【深基4-例11】数列求和"><a href="#【深基4-例11】数列求和" class="headerlink" title="【深基4.例11】数列求和"></a>【深基4.例11】数列求和</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>计算 1+2+3+….+(n-1)+n 的值，其中正整数 n 不大于 100。由于你没有高斯聪明，所以你不被允许使用等差数列求和公式直接求出答案。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一个正整数 n。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一个正整数，表示最后求和的答案。</p>
<h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5050</span><br></pre></td></tr></table></figure>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>数据保证，1 &lt; n &lt; 100。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>题目说“由于你没有高斯聪明，所以你不被允许使用等差数列求和公式直接求出答案”<br>所以，我们老老实实用for循环解</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		ans+=i;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>但我们可以尝试用等差数列求和公式计算</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,(<span class="number">1</span>+n)*n/<span class="number">2</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>编程</tag>
      </tags>
  </entry>
</search>
